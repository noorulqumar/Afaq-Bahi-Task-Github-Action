name: workflow
env:
  ACOUNT_Owner: "noorulqumar80"
  DOCKER_HUB_REPO: "my-image"
  TAG_OF_IMAGE: $GITHUB_RUN_NUMBER
  ACCESS_KEY: ${{ secrets.ACCESS_KEY }}   #ACCESS_KEY of ECR Admin User
  SECRET_KEY: ${{ secrets.SECRET_KEY }}  #SECRET_KEY of ECR Admin
  PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }} #Private for Login to EC2 for deploy docker Containerssh -i "my-key-pair.pem" -o StrictHostKeyChecking=no ubuntu@16.170.141.130

on:
  push:
    branches:
      - main
  workflow_dispatch:


jobs:
  Checkout:
    runs-on: self-hosted
    steps:

      - name: Checkout the code
        uses: actions/checkout@v4
  Check-Setup-docker:
    runs-on: self-hosted
    needs: [Checkout]
    steps:
      - name: Check if Docker is installed
        run: |
          if command -v docker &>/dev/null; then
            echo "Docker is installed."
          else
            echo "Docker is not installed."
            # sudo apt update -y
            # sudo apt  install docker.io -y
            # sudo usermod -aG docker $USER
            # newgrp docker 
            # sleep 10
            # sudo systemctl start docker
          fi

      - name: Set up Docker
        if: steps.check.outputs.stdout == 'Docker is not installed.'
        uses: docker/setup-buildx-action@v1
  Build-docker-image:
    runs-on: self-hosted
    needs: [Check-Setup-docker]
    steps:
      - name: Build docker image
        run: docker build --tag $ACOUNT_Owner/$DOCKER_HUB_REPO:$GITHUB_RUN_NUMBER .

      - name: Show Docker images
        run: docker images

      - name : print DOCKER token
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"

  Push_image_to_docker_Hub:
    runs-on: self-hosted
    needs: [Build-docker-image]
    steps:
      - name: login to docker hub
        run: 'echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u $ACOUNT_Owner --password-stdin'  

      - name: push image
        run: docker push $ACOUNT_Owner/$DOCKER_HUB_REPO:$GITHUB_RUN_NUMBER


  Push_image_to_ECR:
    runs-on: self-hosted
    needs: [Build-docker-image]
    steps:
      - name: check awscli installed or not
        run: |
          if command -v awscli &>/dev/null
          then
            if (( $? !=  0 ))
            then
              sudo apt update
              sudo apt  install awscli -y
            else
              echo "awscli is installed"
            fi
          fi

      - name: delete .aws/credentials if it exist
        run: |
          pwd
          cd ~
          if [[ -d .aws ]]
          then
            sudo rm -rf .aws
          fi
          
      - name: configure AWS credentials
        run: |
          aws configure set aws_access_key_id $ACCESS_KEY
          aws configure set aws_secret_access_key $SECRET_KEY



      - name: login to ECR
        run: aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 294894169523.dkr.ecr.eu-north-1.amazonaws.com

      - name: update the tag of docker image
        run: docker tag $ACOUNT_Owner/$DOCKER_HUB_REPO:$GITHUB_RUN_NUMBER 294894169523.dkr.ecr.eu-north-1.amazonaws.com/test-repo-1:$GITHUB_RUN_NUMBER

      - name: Push Image To ECR
        run: docker push 294894169523.dkr.ecr.eu-north-1.amazonaws.com/test-repo-1:$GITHUB_RUN_NUMBER

  Deploy_web_on_EC2:
    runs-on: self-hosted
    needs: [Push_image_to_ECR]
    steps:
      - name: SSH to the Server
        run: |
          export KEY="-----BEGIN RSA PRIVATE KEY-----
          MIIEowIBAAKCAQEAiWtqAiPGXAfYY2pl4twJInp9y6QjrwS5FwGQpUkvkjfkVuAq
          CTgOUlLRPghfTwpGcz+O457MpRcPKejSaFC0P28J31E2ILO5opJHYFO8pt/sOua6
          S1XkadsDPjpze+78/LyO2/ewFsNyfV9KAOVRaOS/orwYAI3KU2l1n8rFwJ55LEMb
          cuPWfQSWNQtHGXNBGOrjIlHpDCcswj13EoEplBEglUR9/U1Fd/Xv3DCmFv00Br5y
          ufStC3IKZelP7atvREjnSPb55kLF/hUUWEA9ORNHAcrrh0d0m1igaoNfEpXN9A/T
          7wKnxfS4EkVncy98mm5QX3UnzsCHYqng1q1UXQIDAQABAoIBAEYRRtQgeZujRGos
          bhbmKqIx4sJaxvcOaXGZkq80SdU8Omkxkz1wH51KLPZ8PlyG2LUayzi0V5Q11b2A
          wQf/XmiZrWb4eaji+twxycML7z0HH+RIkOSovvZafaTVGN0wVj5nxk/SUy7IKTBT
          zd/3DTN2r1/CmFpv8aHmO9tmAL7dT0mkkS3FCgApHabQSqt0851zAkstUDJTUjGQ
          hLdTeRi5XVUf23XW47ehn9I0jekbVvvTNcxb0kivaeFEBxNn+z73BUOmc8bgkXjJ
          1/FHEhwYIyKNuW4BO2O5Cxqb7Jet0/IykmCqapX2nlDh15IXOfkf/qjdaxP3mhBx
          AVzZOgECgYEAxljrLyVQECslrIERd07dIBgYUuyZ/fCshIaZnvd/6Z5Z4paSZ9Wb
          AOa25vRKddx5BkfUUpPf3VBcSv46ldjBd4lajVq3fPpeuGjf/NtNRdvJHwORMACh
          ZcsnJYs24R0HlGoh1AaycFShA/9bhZNfCTtKBqlQkojbTxgKS+/0rq0CgYEAsVzY
          Ha7qj21dfUj7k+JefIyR2FwWdb5bDyjNx0CiX24BWrBz0D47etGOxlFXobDK54Qf
          X1cJuo1KMMhZiLAaNjDU8habuxaDlUObj0g/u/O8CQWigSa2aTyEOk7ZtKlq1XSN
          MNoOzB/dsPO3gAdK/txG2yQvVu65KzygTaPGYnECgYBA5m9t6cOcxsF5BHJ2m3N3
          QOsUlx58HPgWFQTHIyzTgGDg52vYVeh2Dwfh4iVLE2z2RSKQMpqZi+XnE/CPf3Eu
          b98VSY2oczPzGz3POuK57QSOBVjIYCxvZl3UxwyZ9Cm6wk93VQml/8r/x9pmhqYe
          GyxJqbUXfXhlFPSpjEZ/sQKBgH17oY+GtH8bMjy0iQF887qMvZbkuCM/tS8JgGVL
          blWz/5NJKfcYQH7Jioj2/dfwu+2GhaevbbulwOq4pNfXOARFEjPhGPcJm7jcJ0/9
          HtJ8Q/niGbHkUMQtw6N5K//sqSAyIL6CWFvE49UQ6S/UeRPNhvf+JtwLc8iKUSP9
          DhuRAoGBALf/Ov9Y1Rp1QY6kkxa8tyF/y2wF0b0+sL7sbI2E9oC3YBGhNzAlcwaP
          Ozg2w449mxGoDPuxfra3Z5Fr8g48+Chs7eEsD3XA4VJaXwncK0GXNNJxDiTpPThk
          y2fG8uxDOZfZQvjTW1iuQ9jLZXyAcO7g9VAeyWdb3UDrb6S7wxxp
          -----END RSA PRIVATE KEY-----"
          ssh-add - <<<$KEY
          ssh -o StrictHostKeyChecking=no ubuntu@51.20.144.90
          docker rm -f $(docker ps -aq)
          docker run 294894169523.dkr.ecr.eu-north-1.amazonaws.com/test-repo-1::$GITHUB_RUN_NUMBER

    


