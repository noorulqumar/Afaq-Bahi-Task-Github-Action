name: workflow
env:
  ACOUNT_Owner: "noorulqumar80"
  DOCKER_HUB_REPO: "my-image"
  TAG_OF_IMAGE: "1.0.0"
  ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
  SECRET_KEY: ${{ secrets.SECRET_KEY }}

on:
  push:
    branches:
      - main
  workflow_dispatch:


jobs:
  # Checkout:
  #   runs-on: self-hosted
  #   steps:

  #     - name: Checkout the code
  #       uses: actions/checkout@v4
  # Check-Setup-docker:
  #   runs-on: self-hosted
  #   needs: [Checkout]
  #   steps:
  #     - name: Check if Docker is installed
  #       run: |
  #         if command -v docker &>/dev/null; then
  #           echo "Docker is installed."
  #         else
  #           echo "Docker is not installed."
  #           # sudo apt update -y
  #           # sudo apt  install docker.io -y
  #           # sudo usermod -aG docker $USER
  #           # newgrp docker 
  #           # sleep 10
  #           # sudo systemctl start docker
  #         fi

  #     - name: Set up Docker
  #       if: steps.check.outputs.stdout == 'Docker is not installed.'
  #       uses: docker/setup-buildx-action@v1
  # Build-docker-image:
  #   runs-on: self-hosted
  #   needs: [Check-Setup-docker]
  #   steps:
  #     - name: Build docker image
  #       run: docker build --tag $ACOUNT_Owner/$DOCKER_HUB_REPO:$TAG_OF_IMAGE .

  #     - name: Show Docker images
  #       run: docker images

  #     - name : print DOCKER token
  #       run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}"

  # Push_image_to_docker_Hub:
  #   runs-on: self-hosted
  #   needs: [Build-docker-image]
  #   steps:
  #     - name: login to docker hub
  #       run: 'echo ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} | docker login -u $ACOUNT_Owner --password-stdin'  

  #     - name: push image
  #       run: docker push $ACOUNT_Owner/$DOCKER_HUB_REPO:$TAG_OF_IMAGE


  Push_image_to_ECR:
    runs-on: self-hosted
    # needs: [Build-docker-image]
    steps:
      - name: check awscli installed or not
        run: |
          if command -v awscli &>/dev/null
          then
            if (( $? !=  0 ))
            then
              sudo apt update
              sudo apt  install awscli -y
            else
              echo "awscli is installed"
            fi
          fi
      - name: configure AWS credentials
        run: |
          aws configure set aws_access_key_id $ACCESS_KEY
          aws configure set aws_secret_access_key $SECRET_KEY


      # - name: delete .aws/credentials if it exist
      #   run: |
      #     if [[ -d .aws ]]
      #     then
      #       sudo rm -rf .aws
      #     fi

      # - name: create new .aws/credentials
      #   run: |
      #     cd ~
      #     pwd
      #     mkdir .aws
      #     cd .aws/
      #     touch credentials
      #     echo [default] >> credentials
      #     echo aws_access_key_id = $ACCESS_KEY >> credentials
      #     echo aws_secret_access_key = $SECRET_KEY >> credentials


      - name: login to ECR
        run: aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin 294894169523.dkr.ecr.eu-north-1.amazonaws.com

      # - name: update the tag of docker image
      #   run: docker tag $ACOUNT_Owner/$DOCKER_HUB_REPO:$TAG_OF_IMAGE 294894169523.dkr.ecr.eu-north-1.amazonaws.com/test-repo:$TAG_OF_IMAGE




    


